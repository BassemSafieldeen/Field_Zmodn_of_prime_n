class Field (α : Type) :=
(equals : α → α → Prop)
(reflexive_equals : ∀ a, equals a a)
(symmetric_equals : ∀ a b, equals a b ↔ equals b a)
(transitive_equals : ∀ a b c, equals a b → equals b c → equals a c)
(add : α → α → α)
(mul : α → α → α)
(add_comm : ∀ a b, equals (add a b) (add b a))
(mul_comm : ∀ a b, equals (mul a b) (mul b a))
(add_assoc : ∀ a b c, equals (add (add a b) c) (add a (add b c)))
(mul_assoc : ∀ a b c, equals (mul (mul a b) c) (mul a (mul b c)))
(zero : α)
(add_zero : ∀ a, equals (add a zero) (a))
(one : α)
(mul_one : ∀ a, equals (mul a one) (a))
(add_inv : ∀ a, ∃ b, equals (add a b) (zero))
(mul_inv : ∀ a ≠ zero, ∃ b, equals (mul a b) (one))
(distrib : ∀ a b c, equals (mul a (add b c)) (add (mul a b) (mul a c)))